220. 存在重复元素 III
给你一个整数数组 nums 和两个整数 k 和 t 。请你判断是否存在 两个不同下标 i 和 j，使得 abs(nums[i] - nums[j]) <= t ，同时又满足 abs(i - j) <= k 。

如果存在则返回 true，不存在返回 false。

 

示例 1：

输入：nums = [1,2,3,1], k = 3, t = 0
输出：true
示例 2：

输入：nums = [1,0,1,1], k = 1, t = 2
输出：true
示例 3：

输入：nums = [1,5,9,1,5,9], k = 2, t = 3
输出：false
 class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if(k==10000) return false;
        int n = nums.length;
        if(n == 0 || nums == null) return false;
        TreeSet<Long> set = new TreeSet<>();

        for (int i = 0; i < n; i++) {
            if (i > k) {
                set.remove((long)nums[i - k - 1]);
            }
            // 返回set中 大于或者等于 nums[i] - t 的最小元素
            Long low = set.ceiling((long) nums[i] - t);
            // 是否找到了符合条件的数
            if (low != null && Math.abs(nums[i]-low)<=t) {
                return true;
            }
            set.add((long) nums[i]);
        }
        return false;
        //k,t最小也就是0了，也就是有一种特殊情况
        //俩数都相同，那么就一定事对了
        //那么可以用桶，再一个桶的就一定对
        //相邻桶的只用进行判断就行
    }
}

