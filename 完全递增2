354. 俄罗斯套娃信封问题
给你一个二维整数数组 envelopes ，其中 envelopes[i] = [wi, hi] ，表示第 i 个信封的宽度和高度。

当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。

请计算 最多能有多少个 信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。

注意：不允许旋转信封。

 
示例 1：

输入：envelopes = [[5,4],[6,4],[6,7],[2,3]]
输出：3
解释：最多信封的个数为 3, 组合为: [2,3] => [5,4] => [6,7]。
示例 2：

输入：envelopes = [[1,1],[1,1],[1,1]]
输出：1

class Solution {
        public int maxEnvelopes(int[][] matrix) {
        Arrays.sort(matrix,(o1,o1)->(o1[0]!=o2[0]?o1[0]-o2[0]:o2[1]-o2[1]));
        int arr[]=new int [matrix.length+1];
        int len=1;
        arr[len]=matrix[0][1];
        for(int i=1;i<matrix.length)
        {
           if(arr[len]<matrix[i][1])
           {
             arr[++len]=matrix[i][1];
           }else{
           int l=1;
           int r=len;
           int temp=0;
           while(l<=r)
           {
           int mid=(l+r)/2;
           if(arr[mid]<matrix[i][1])
           {
              l=mid+1;
              temp=mid;
           }else{
             r=mid-1;
             }
             arr[temp+1]=matrix[i][1];
           }
                 }
               }
               return len;
        }
        }
